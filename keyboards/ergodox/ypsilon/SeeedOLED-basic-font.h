/* ----------------------------------------------------------------------------
 * Yosidox: basicfont and other bitmaps to display
 * ----------------------------------------------------------------------------
 * Copyright (c) 2016 TAKAI Yosiyuki <ypsilon.takai@gmail.com>
 * Released under The MIT License (MIT)
 * ------------------------------------------------------------------------- */

#ifndef SEEDOLED_BASIC_FONT_H
#define SEEDOLED_BASIC_FONT_H

#include <stdint.h>
#include <avr/pgmspace.h>

// bitmap datas for LED status display
// width = 16, height = 8
// CapsLock
const static uint8_t CaplkImage[16] PROGMEM= {
    0x7e, 0x81, 0x81, 0xb9, 0x91, 0xff, 0x81, 0x81,
    0xe9, 0x83, 0xff, 0x81, 0x81, 0xe9, 0xe3, 0x7e
};
// Compose
const static uint8_t CompImage[16] PROGMEM= {
    0x7e, 0x81, 0x81, 0xb9, 0x91, 0xff, 0x81, 0x81,
    0xb9, 0x81, 0xff, 0x81, 0x83, 0xf9, 0x81, 0x7e 
};
// Kana
const static uint8_t KanaImage[16] PROGMEM= {
    0x7e, 0x81, 0x81, 0xe3, 0x89, 0xff, 0x81, 0x81,
    0xe9, 0x83, 0xff, 0x81, 0x81, 0xf9, 0x83, 0x7e 
};
// Number lock
const static uint8_t NumlkImage[16] PROGMEM= {
    0x7e, 0x81, 0x81, 0xf9, 0x81, 0xff, 0x81, 0x81,
    0x9f, 0x81, 0xff, 0x81, 0x83, 0xf9, 0x81, 0x7e 
};
// Scroll lock
const static uint8_t ScrlkImage[16] PROGMEM= {
    0x7e, 0xa1, 0xa1, 0xa9, 0x89, 0xff, 0x81, 0x81,
    0xbf, 0xbf, 0xff, 0x81, 0x81, 0xe3, 0x89, 0x7e 
};

// bitmap datas for Modifier key 
// width = 16, height = 8
// Control
const static uint8_t CtrlImage[] PROGMEM ={
    0x7e, 0x81, 0x81, 0xb9, 0x91, 0xff, 0xf9, 0x81,
    0xf9, 0xf9, 0xff, 0x81, 0x81, 0xbf, 0xbf, 0x7e, 
};
// Alternative
const static uint8_t AltImage[] PROGMEM ={
    0x7e, 0x81, 0x81, 0xe9, 0x81, 0xff, 0x81, 0x81,
    0xbf, 0xbf, 0xf9, 0x81, 0x81, 0xf9, 0xf9, 0x7e, 
};
// Shift	
const static uint8_t ShiftImage[] PROGMEM ={
    0x7e, 0xa1, 0xa1, 0xa9, 0x89, 0xff, 0x81, 0x81,
    0xe9, 0xf9, 0xff, 0xf9, 0x81, 0xf9, 0xf9, 0x7e, 
};
// GUI
const static uint8_t GuiImage[] PROGMEM ={
    0x7e, 0x81, 0x81, 0xad, 0x89, 0xef, 0xff, 0x81,
    0x81, 0xbf, 0xbf, 0x81, 0xff, 0x81, 0x81, 0x7e,
};


// bitmap data of rotating disk
const static uint8_t Rotator_0[8][8] PROGMEM ={
    {0x30, 0x70, 0xf0, 0xf0, 0xff, 0xff, 0x7e, 0x3c},
    {0x3c, 0x7e, 0xfc, 0xf8, 0xf8, 0xfc, 0x7e, 0x3c},
    {0x3c, 0x7e, 0xff, 0xff, 0xf0, 0xf0, 0x70, 0x30},
    {0x3c, 0x7e, 0xff, 0xff, 0xff, 0xe7, 0x42, 0x00},
    {0x3c, 0x7e, 0xff, 0xff, 0x0f, 0x0f, 0x0e, 0x0c},
    {0x3c, 0x7e, 0x3f, 0x1f, 0x1f, 0x3f, 0x7e, 0x3c},
    {0x0c, 0x0e, 0x0f, 0x0f, 0xff, 0xff, 0x7e, 0x3c},
    {0x00, 0x42, 0xe7, 0xff, 0xff, 0xff, 0x7e, 0x3c},
};

const static uint8_t Rotator[8][8] PROGMEM ={
    {0x3c, 0x7e, 0xc3, 0x00, 0x00, 0x00, 0x00, 0x00},
    {0x3c, 0x7e, 0xfe, 0xff, 0x00, 0x00, 0x00, 0x00},
    {0x3c, 0x7e, 0xff, 0xff, 0xff, 0x3c, 0x00, 0x00},
    {0x3c, 0x7e, 0xff, 0xff, 0xff, 0xff, 0x7e, 0x3c},
    {0x00, 0x00, 0x3c, 0xff, 0xff, 0xff, 0x7e, 0x3c},
    {0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x7e, 0x3c},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0xc3, 0x7e, 0x3c},
    {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
};



// Number font for 0 to 15
const uint8_t NumFont[][8] ={
    {0x00,0x3E,0x51,0x49,0x45,0x3E,0x00,0x00},  // 0
    {0x00,0x00,0x42,0x7F,0x40,0x00,0x00,0x00},  // 1
    {0x00,0x62,0x51,0x49,0x49,0x46,0x00,0x00},  // 2
    {0x00,0x22,0x41,0x49,0x49,0x36,0x00,0x00},  // 3
    {0x00,0x18,0x14,0x12,0x7F,0x10,0x00,0x00},  // 4
    {0x00,0x27,0x45,0x45,0x45,0x39,0x00,0x00},  // 5
    {0x00,0x3C,0x4A,0x49,0x49,0x30,0x00,0x00},  // 6
    {0x00,0x01,0x71,0x09,0x05,0x03,0x00,0x00},  // 7
    {0x00,0x36,0x49,0x49,0x49,0x36,0x00,0x00},  // 8
    {0x00,0x06,0x49,0x49,0x29,0x1E,0x00,0x00},  // 9
    {0x00,0x7E,0x09,0x09,0x09,0x7E,0x00,0x00},  // A
    {0x00,0x7F,0x49,0x49,0x49,0x36,0x00,0x00},  // B
    {0x00,0x3E,0x41,0x41,0x41,0x22,0x00,0x00},  // C
    {0x00,0x7F,0x41,0x41,0x22,0x1C,0x00,0x00},  // D
    {0x00,0x7F,0x49,0x49,0x49,0x41,0x00,0x00},  // E
    {0x00,0x7F,0x09,0x09,0x09,0x01,0x00,0x00},  // F
};

// Alfabet font only capital letter
const uint8_t AlfaFont[][8] ={
    {0x00,0x7E,0x09,0x09,0x09,0x7E,0x00,0x00},  // A
    {0x00,0x7F,0x49,0x49,0x49,0x36,0x00,0x00},  // B
    {0x00,0x3E,0x41,0x41,0x41,0x22,0x00,0x00},  // C
    {0x00,0x7F,0x41,0x41,0x22,0x1C,0x00,0x00},  // D
    {0x00,0x7F,0x49,0x49,0x49,0x41,0x00,0x00},  // E
    {0x00,0x7F,0x09,0x09,0x09,0x01,0x00,0x00},  // F
    {0x00,0x3E,0x41,0x41,0x51,0x72,0x00,0x00},  // G
    {0x00,0x7F,0x08,0x08,0x08,0x7F,0x00,0x00},  // H
    {0x00,0x41,0x7F,0x41,0x00,0x00,0x00,0x00},  // I
    {0x00,0x20,0x40,0x41,0x3F,0x01,0x00,0x00},  // J
    {0x00,0x7F,0x08,0x14,0x22,0x41,0x00,0x00},  // K
    {0x00,0x7F,0x40,0x40,0x40,0x40,0x00,0x00},  // L
    {0x00,0x7F,0x02,0x0C,0x02,0x7F,0x00,0x00},  // M
    {0x00,0x7F,0x04,0x08,0x10,0x7F,0x00,0x00},  // N
    {0x00,0x3E,0x41,0x41,0x41,0x3E,0x00,0x00},  // O
    {0x00,0x7F,0x09,0x09,0x09,0x06,0x00,0x00},  // P
    {0x00,0x3E,0x41,0x51,0x21,0x5E,0x00,0x00},  // Q
    {0x00,0x7F,0x09,0x19,0x29,0x46,0x00,0x00},  // R
    {0x00,0x26,0x49,0x49,0x49,0x32,0x00,0x00},  // S
    {0x00,0x01,0x01,0x7F,0x01,0x01,0x00,0x00},  // T
    {0x00,0x3F,0x40,0x40,0x40,0x3F,0x00,0x00},  // U
    {0x00,0x1F,0x20,0x40,0x20,0x1F,0x00,0x00},  // V
    {0x00,0x3F,0x40,0x38,0x40,0x3F,0x00,0x00},  // W
    {0x00,0x63,0x14,0x08,0x14,0x63,0x00,0x00},  // X
    {0x00,0x03,0x04,0x78,0x04,0x03,0x00,0x00},  // Y
    {0x00,0x61,0x51,0x49,0x45,0x43,0x00,0x00},  // Z
};


// 8x8 Font ASCII 32 - 127 Implemented
// Users can modify this to support more characters(glyphs)
// BasicFont is placed in code memory.
// This font be freely used without any restriction(It is placed in public domain)
const uint8_t BasicFont[][8] PROGMEM={
    {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},  // [SP]
    {0x00,0x00,0x5F,0x00,0x00,0x00,0x00,0x00},  // !
    {0x00,0x00,0x07,0x00,0x07,0x00,0x00,0x00},  // "
    {0x00,0x14,0x7F,0x14,0x7F,0x14,0x00,0x00},  // #
    {0x00,0x24,0x2A,0x7F,0x2A,0x12,0x00,0x00},  // $
    {0x00,0x23,0x13,0x08,0x64,0x62,0x00,0x00},  // %
    {0x00,0x36,0x49,0x55,0x22,0x50,0x00,0x00},  // &
    {0x00,0x00,0x05,0x03,0x00,0x00,0x00,0x00},  // '
    {0x00,0x1C,0x22,0x41,0x00,0x00,0x00,0x00},  // (
    {0x00,0x41,0x22,0x1C,0x00,0x00,0x00,0x00},  // )
    {0x00,0x08,0x2A,0x1C,0x2A,0x08,0x00,0x00},  // *
    {0x00,0x08,0x08,0x3E,0x08,0x08,0x00,0x00},  // +
    {0x00,0xA0,0x60,0x00,0x00,0x00,0x00,0x00},  // ,
    {0x00,0x08,0x08,0x08,0x08,0x08,0x00,0x00},  // -
    {0x00,0x60,0x60,0x00,0x00,0x00,0x00,0x00},  // .
    {0x00,0x20,0x10,0x08,0x04,0x02,0x00,0x00},  // /
    {0x00,0x3E,0x51,0x49,0x45,0x3E,0x00,0x00},  // 0
    {0x00,0x00,0x42,0x7F,0x40,0x00,0x00,0x00},  // 1
    {0x00,0x62,0x51,0x49,0x49,0x46,0x00,0x00},  // 2
    {0x00,0x22,0x41,0x49,0x49,0x36,0x00,0x00},  // 3
    {0x00,0x18,0x14,0x12,0x7F,0x10,0x00,0x00},  // 4
    {0x00,0x27,0x45,0x45,0x45,0x39,0x00,0x00},  // 5
    {0x00,0x3C,0x4A,0x49,0x49,0x30,0x00,0x00},  // 6
    {0x00,0x01,0x71,0x09,0x05,0x03,0x00,0x00},  // 7
    {0x00,0x36,0x49,0x49,0x49,0x36,0x00,0x00},  // 8
    {0x00,0x06,0x49,0x49,0x29,0x1E,0x00,0x00},  // 9
    {0x00,0x00,0x36,0x36,0x00,0x00,0x00,0x00},  // :
    {0x00,0x00,0xAC,0x6C,0x00,0x00,0x00,0x00},  // ;
    {0x00,0x08,0x14,0x22,0x41,0x00,0x00,0x00},  // <
    {0x00,0x14,0x14,0x14,0x14,0x14,0x00,0x00},  // =
    {0x00,0x41,0x22,0x14,0x08,0x00,0x00,0x00},  // >
    {0x00,0x02,0x01,0x51,0x09,0x06,0x00,0x00},  // ?
    {0x00,0x32,0x49,0x79,0x41,0x3E,0x00,0x00},  // @
    {0x00,0x7E,0x09,0x09,0x09,0x7E,0x00,0x00},  // A
    {0x00,0x7F,0x49,0x49,0x49,0x36,0x00,0x00},  // B
    {0x00,0x3E,0x41,0x41,0x41,0x22,0x00,0x00},  // C
    {0x00,0x7F,0x41,0x41,0x22,0x1C,0x00,0x00},  // D
    {0x00,0x7F,0x49,0x49,0x49,0x41,0x00,0x00},  // E
    {0x00,0x7F,0x09,0x09,0x09,0x01,0x00,0x00},  // F
    {0x00,0x3E,0x41,0x41,0x51,0x72,0x00,0x00},  // G
    {0x00,0x7F,0x08,0x08,0x08,0x7F,0x00,0x00},  // H
    {0x00,0x41,0x7F,0x41,0x00,0x00,0x00,0x00},  // I
    {0x00,0x20,0x40,0x41,0x3F,0x01,0x00,0x00},  // J
    {0x00,0x7F,0x08,0x14,0x22,0x41,0x00,0x00},  // K
    {0x00,0x7F,0x40,0x40,0x40,0x40,0x00,0x00},  // L
    {0x00,0x7F,0x02,0x0C,0x02,0x7F,0x00,0x00},  // M
    {0x00,0x7F,0x04,0x08,0x10,0x7F,0x00,0x00},  // N
    {0x00,0x3E,0x41,0x41,0x41,0x3E,0x00,0x00},  // O
    {0x00,0x7F,0x09,0x09,0x09,0x06,0x00,0x00},  // P
    {0x00,0x3E,0x41,0x51,0x21,0x5E,0x00,0x00},  // Q
    {0x00,0x7F,0x09,0x19,0x29,0x46,0x00,0x00},  // R
    {0x00,0x26,0x49,0x49,0x49,0x32,0x00,0x00},  // S
    {0x00,0x01,0x01,0x7F,0x01,0x01,0x00,0x00},  // T
    {0x00,0x3F,0x40,0x40,0x40,0x3F,0x00,0x00},  // U
    {0x00,0x1F,0x20,0x40,0x20,0x1F,0x00,0x00},  // V
    {0x00,0x3F,0x40,0x38,0x40,0x3F,0x00,0x00},  // W
    {0x00,0x63,0x14,0x08,0x14,0x63,0x00,0x00},  // X
    {0x00,0x03,0x04,0x78,0x04,0x03,0x00,0x00},  // Y
    {0x00,0x61,0x51,0x49,0x45,0x43,0x00,0x00},  // Z
    {0x00,0x7F,0x41,0x41,0x00,0x00,0x00,0x00},  // [
    {0x00,0x02,0x04,0x08,0x10,0x20,0x00,0x00},  // [backslash]
    {0x00,0x41,0x41,0x7F,0x00,0x00,0x00,0x00},  // ]
    {0x00,0x04,0x02,0x01,0x02,0x04,0x00,0x00},  // ^
    {0x00,0x80,0x80,0x80,0x80,0x80,0x00,0x00},  // _
    {0x00,0x01,0x02,0x04,0x00,0x00,0x00,0x00},  // `
    {0x00,0x20,0x54,0x54,0x54,0x78,0x00,0x00},  // a
    {0x00,0x7F,0x48,0x44,0x44,0x38,0x00,0x00},  // b
    {0x00,0x38,0x44,0x44,0x28,0x00,0x00,0x00},  // c
    {0x00,0x38,0x44,0x44,0x48,0x7F,0x00,0x00},  // d
    {0x00,0x38,0x54,0x54,0x54,0x18,0x00,0x00},  // e
    {0x00,0x08,0x7E,0x09,0x02,0x00,0x00,0x00},  // f
    {0x00,0x18,0xA4,0xA4,0xA4,0x7C,0x00,0x00},  // g
    {0x00,0x7F,0x08,0x04,0x04,0x78,0x00,0x00},  // h
    {0x00,0x00,0x7D,0x00,0x00,0x00,0x00,0x00},  // i
    {0x00,0x80,0x84,0x7D,0x00,0x00,0x00,0x00},  // j
    {0x00,0x7F,0x10,0x28,0x44,0x00,0x00,0x00},  // k
    {0x00,0x41,0x7F,0x40,0x00,0x00,0x00,0x00},  // l
    {0x00,0x7C,0x04,0x18,0x04,0x78,0x00,0x00},  // m
    {0x00,0x7C,0x08,0x04,0x7C,0x00,0x00,0x00},  // n
    {0x00,0x38,0x44,0x44,0x38,0x00,0x00,0x00},  // o
    {0x00,0xFC,0x24,0x24,0x18,0x00,0x00,0x00},  // p
    {0x00,0x18,0x24,0x24,0xFC,0x00,0x00,0x00},  // q
    {0x00,0x00,0x7C,0x08,0x04,0x00,0x00,0x00},  // r
    {0x00,0x48,0x54,0x54,0x24,0x00,0x00,0x00},  // s
    {0x00,0x04,0x7F,0x44,0x00,0x00,0x00,0x00},  // t
    {0x00,0x3C,0x40,0x40,0x7C,0x00,0x00,0x00},  // u
    {0x00,0x1C,0x20,0x40,0x20,0x1C,0x00,0x00},  // v
    {0x00,0x3C,0x40,0x30,0x40,0x3C,0x00,0x00},  // w
    {0x00,0x44,0x28,0x10,0x28,0x44,0x00,0x00},  // x
    {0x00,0x1C,0xA0,0xA0,0x7C,0x00,0x00,0x00},  // y
    {0x00,0x44,0x64,0x54,0x4C,0x44,0x00,0x00},  // z
    {0x00,0x08,0x36,0x41,0x00,0x00,0x00,0x00},  // {
    {0x00,0x00,0x7F,0x00,0x00,0x00,0x00,0x00},  // |
    {0x00,0x41,0x36,0x08,0x00,0x00,0x00,0x00},  // }
    {0x00,0x02,0x01,0x01,0x02,0x01,0x00,0x00},  // ~
    {0x00,0x02,0x05,0x05,0x02,0x00,0x00,0x00}   // [DEL]
};

#endif
